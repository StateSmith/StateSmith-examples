// Autogenerated with StateSmith 0.9.14-alpha+1f116014cd5077a4daa688d05b563fe0be54ef0c.
// Algorithm: Balanced1. See https://github.com/StateSmith/StateSmith/wiki/Algorithms

// User RenderConfig HFileTop text...
#pragma once
#include <stdint.h>

// User RenderConfig HFileIncludes text...
typedef enum LightSm_EventId
{
    LightSm_EventId_ESCAPE = 0,
    LightSm_EventId_EV1 = 1,
    LightSm_EventId_EV2 = 2,
    LightSm_EventId_EV3 = 3,
} LightSm_EventId;

enum
{
    LightSm_EventIdCount = 4
};

typedef enum LightSm_StateId
{
    LightSm_StateId_ROOT = 0,
    LightSm_StateId_ORDER_MENU = 1,
    LightSm_StateId_BEVERAGE = 2,
    LightSm_StateId_COFFEE = 3,
    LightSm_StateId_TEA = 4,
    LightSm_StateId_WATER = 5,
    LightSm_StateId_FOOD = 6,
    LightSm_StateId_JUNK = 7,
    LightSm_StateId_POTATO = 8,
    LightSm_StateId_SUSHI = 9,
    LightSm_StateId_WAITING = 10,
} LightSm_StateId;

enum
{
    LightSm_StateIdCount = 11
};

typedef enum LightSm_ORDER_MENU_HistoryId
{
    LightSm_ORDER_MENU_HistoryId_BEVERAGE = 0, // default transition
    LightSm_ORDER_MENU_HistoryId_FOOD = 1,
    LightSm_ORDER_MENU_HistoryId_WATER = 2,
    LightSm_ORDER_MENU_HistoryId_COFFEE = 3,
    LightSm_ORDER_MENU_HistoryId_TEA = 4,
} LightSm_ORDER_MENU_HistoryId;


// Generated state machine
// forward declaration
typedef struct LightSm LightSm;

// State machine variables. Can be used for inputs, outputs, user variables...
typedef struct LightSm_Vars
{
    LightSm_ORDER_MENU_HistoryId ORDER_MENU_history;
    // your variable declartions here like: 
    // uint8_t count;
} LightSm_Vars;



// event handler type
typedef void (*LightSm_Func)(LightSm* sm);

// State machine constructor. Must be called before start or dispatch event functions. Not thread safe.
void LightSm_ctor(LightSm* sm);

// Starts the state machine. Must be called before dispatching events. Not thread safe.
void LightSm_start(LightSm* sm);

// Dispatches an event to the state machine. Not thread safe.
void LightSm_dispatch_event(LightSm* sm, LightSm_EventId event_id);

// Thread safe.
char const * LightSm_state_id_to_string(LightSm_StateId id);

// Thread safe.
char const * LightSm_event_id_to_string(LightSm_EventId id);

// Generated state machine
struct LightSm
{
    // Used internally by state machine. Feel free to inspect, but don't modify.
    LightSm_StateId state_id;
    
    // Used internally by state machine. Don't modify.
    LightSm_Func ancestor_event_handler;
    
    // Used internally by state machine. Don't modify.
    LightSm_Func current_event_handlers[LightSm_EventIdCount];
    
    // Used internally by state machine. Don't modify.
    LightSm_Func current_state_exit_handler;
    
    // Variables. Can be used for inputs, outputs, user variables...
    LightSm_Vars vars;
};

